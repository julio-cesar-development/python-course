version: '3.4'

x-env:
  &rabbit-env
  RABBIT_HOST: ${RABBIT_HOST:-rabbit}
  RABBIT_PORT: ${RABBIT_PORT:-5672}
  RABBIT_USER: ${RABBIT_USER:-dev}
  RABBIT_PASS: ${RABBIT_PASS:-dev}

services:
  publisher-app:
    container_name: publisher-app
    build:
      context: ./publisher-app
      dockerfile: Dockerfile
    depends_on:
      - rabbit
    environment:
      <<: *rabbit-env
      RABBIT_EXCHANGE: ${RABBIT_EXCHANGE:-event_queue_exchange}
    networks:
      - blackdevs_net
    restart: always
    command: "sh -c 'while true; do sleep 5; echo WAITING FOR RABBIT :: $$RABBIT_HOST && nc -z $$RABBIT_HOST 5672 1> /dev/null 2>&1; test $$? == 0 && echo RABBIT HEALTH && break; done; echo CALLING SCRIPT && /usr/local/bin/python /app/publisher.py'"

  consumer-app-01:
    container_name: consumer-app-01
    build:
      context: ./consumer-app
      dockerfile: Dockerfile
    depends_on:
      - rabbit
    environment:
      <<: *rabbit-env
      RABBIT_QUEUE: event_queue_01
    networks:
      - blackdevs_net
    restart: always
    command: "sh -c 'while true; do sleep 5; echo WAITING FOR RABBIT :: $$RABBIT_HOST && nc -z $$RABBIT_HOST 5672 1> /dev/null 2>&1; test $$? == 0 && echo RABBIT HEALTH && break; done; echo CALLING SCRIPT && /usr/local/bin/python /app/consumer.py'"

  consumer-app-02:
    container_name: consumer-app-02
    build:
      context: ./consumer-app
      dockerfile: Dockerfile
    depends_on:
      - rabbit
    environment:
      <<: *rabbit-env
      RABBIT_QUEUE: event_queue_02
    networks:
      - blackdevs_net
    restart: always
    command: "sh -c 'while true; do sleep 5; echo WAITING FOR RABBIT :: $$RABBIT_HOST && nc -z $$RABBIT_HOST 5672 1> /dev/null 2>&1; test $$? == 0 && echo RABBIT HEALTH && break; done; echo CALLING SCRIPT && /usr/local/bin/python /app/consumer.py'"

  rabbit:
    container_name: rabbit
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - blackdevs_net
    restart: always

networks:
  blackdevs_net:
    driver: bridge
