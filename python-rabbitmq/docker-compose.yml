version: '3.4'

x-env:
  &rabbit-env
  RABBIT_HOST: ${RABBIT_HOST:-rabbit}
  RABBIT_PORT: ${RABBIT_PORT:-5672}
  RABBIT_USER: ${RABBIT_USER:-dev}
  RABBIT_PASS: ${RABBIT_PASS:-dev}

services:
  publisher:
    container_name: publisher
    build:
      context: ./publisher
      dockerfile: Dockerfile
    depends_on:
      - rabbit
    environment:
      <<: *rabbit-env
      RABBIT_EXCHANGE: ${RABBIT_EXCHANGE:-event_queue_exchange}
    networks:
      - localnet
    restart: always
    command: "sh -c 'while true; do sleep 5; echo WAITING FOR RABBIT :: $$RABBIT_HOST && nc -z $$RABBIT_HOST 5672 1> /dev/null 2>&1; test $$? == 0 && echo RABBIT HEALTH && break; done; echo CALLING SCRIPT && python -u publisher.py'"

  consumer01:
    container_name: consumer01
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
      - rabbit
    environment:
      <<: *rabbit-env
      RABBIT_QUEUE: event_queue_01
    networks:
      - localnet
    restart: always
    command: "sh -c 'while true; do sleep 5; echo WAITING FOR RABBIT :: $$RABBIT_HOST && nc -z $$RABBIT_HOST 5672 1> /dev/null 2>&1; test $$? == 0 && echo RABBIT HEALTH && break; done; echo CALLING SCRIPT && python -u consumer.py'"

  consumer02:
    container_name: consumer02
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
      - rabbit
    environment:
      <<: *rabbit-env
      RABBIT_QUEUE: event_queue_02
    networks:
      - localnet
    restart: always
    command: "sh -c 'while true; do sleep 5; echo WAITING FOR RABBIT :: $$RABBIT_HOST && nc -z $$RABBIT_HOST 5672 1> /dev/null 2>&1; test $$? == 0 && echo RABBIT HEALTH && break; done; echo CALLING SCRIPT && python -u consumer.py'"

  deadletter:
    container_name: deadletter
    build:
      context: ./deadletter
      dockerfile: Dockerfile
    depends_on:
      - rabbit
    environment:
      <<: *rabbit-env
      RABBIT_QUEUE: dead_letter
    networks:
      - localnet
    restart: always
    command: "sh -c 'while true; do sleep 5; echo WAITING FOR RABBIT :: $$RABBIT_HOST && nc -z $$RABBIT_HOST 5672 1> /dev/null 2>&1; test $$? == 0 && echo RABBIT HEALTH && break; done; echo CALLING SCRIPT && python -u main.py'"

  rabbit:
    container_name: rabbit
    build:
      context: ./rabbit
      dockerfile: Dockerfile
    ports:
      - '5872:5672'
      - '15872:15672'
    networks:
      - localnet
    restart: always

networks:
  localnet:
    driver: bridge
